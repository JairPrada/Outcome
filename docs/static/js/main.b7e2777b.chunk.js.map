{"version":3,"sources":["FirebaseConfig.js","Redux/reducer/creador de acciones.js","Redux/actions/actions.js","Componentes/Moleculas/Alerta.jsx","Componentes/Vistas/Inicio.jsx","Componentes/Moleculas/IconoGoogle.jsx","Componentes/Vistas/Login.jsx","clases/clases.js","Componentes/Vistas/Registro.jsx","Componentes/Moleculas/Menu.jsx","Componentes/Vistas/Usuarios Logeados/EditarPerfil.jsx","Componentes/Vistas/Usuarios Logeados/CrearProblema.jsx","Componentes/Moleculas/Tarjeta.jsx","Componentes/Vistas/Usuarios Logeados/ListaProblemas.jsx","Componentes/Vistas/Usuarios Logeados/Perfil.jsx","rutas/Rutas.jsx","Redux/store/Store.js","temaConfig.js","App.js","serviceWorker.js","index.js","Medios/Videos/Banner.mp4","Medios/Imagenes/1.svg","Medios/Imagenes/2.svg","Medios/Imagenes/3.svg","Medios/Imagenes/Google.svg","Medios/Imagenes/Outcome.svg","Medios/Videos/Perfil.mp4"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Autenticado","auth","Facebook","FacebookAuthProvider","Google","GoogleAuthProvider","Github","GithubAuthProvider","EstadoAlerta","mensaje","type","open","contenido","tipo","connect","state","alerta","dispatch","handleClose","props","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","id","severity","Inicio","className","src","Banner","width","muted","autoPlay","loop","Container","maxWidth","Grid","container","spacing","Slide","direction","in","timeout","item","xs","md","img3","alt","img1","img2","IconoGoogle","height","sesion","estadoSesion","respuesta","estado","data","usuario","estadoAlerta","iniciarSesion","signInWithEmailAndPassword","correo","contraseña","then","resultado","user","emailVerified","signOut","collection","doc","uid","get","datos","nombre","apellido","pais","bandera","catch","error","code","IniciarSesion","useState","email","password","setState","useEffect","history","push","cambiar","e","target","name","value","iniciarSesionF","a","console","log","signInWithPopup","iniciarSesionG","iniciarSesionGit","Paper","elevation","style","padding","background","mountOnEnter","unmountOnExit","Typography","variant","gutterBottom","varian","fontSize","color","TextField","fullWidth","required","onChange","helperText","label","Button","endIcon","onClick","startIcon","Usuario","this","nuevoUsuarioP","createUserWithEmailAndPassword","sendEmailVerification","url","set","Object","assign","paises","seleccion","setSeleccion","fetch","res","json","flag","forEach","select","SelectProps","native","key","map","typeof","UsuarioNuevo","withRouter","cerrarSesion","AppBar","Toolbar","to","Outcome","flexGrow","Hidden","smDown","window","confirm","Avatar","mdUp","editarUsuario","EditarUsuario","mostrarAlerta","crearProblema","datosProblema","resultas","titulo","categoria","descripcion","dueño","fotos","align","multiline","rows","withIcon","buttonText","picture","imgExtension","maxFileSize","elemento","justify","Tarjeta","Card","CardActionArea","CardMedia","component","image","title","CardContent","CardActions","size","obtenerProblemas","getData","documentos","onSnapshot","arreglo","marginTop","video","PerfilBanner","margin","Fragment","path","exact","Login","Registro","Perfil","EditarPerfil","CrearProblema","ListaProblemas","initialStore","problema","createStore","action","composeWithDevTools","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","ThemeProvider","store","Store","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b7e2777b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBM7AtWVYcshqqwT1lObZHKLMYJyTgkx2Q\",\r\n    authDomain: \"reactfirebase-e716a.firebaseapp.com\",\r\n    databaseURL: \"https://reactfirebase-e716a.firebaseio.com\",\r\n    projectId: \"reactfirebase-e716a\",\r\n    storageBucket: \"reactfirebase-e716a.appspot.com\",\r\n    messagingSenderId: \"572459586365\",\r\n    appId: \"1:572459586365:web:cc7256b540a36982de2b54\",\r\n    measurementId: \"G-FB6E3M3LFG\"\r\n};\r\n\r\nexport const Firebase= firebase.initializeApp(firebaseConfig);\r\nexport const db=Firebase.firestore();\r\nexport const Autenticado=Firebase.auth();\r\nexport const Facebook = new firebase.auth.FacebookAuthProvider();\r\nexport const Google = new firebase.auth.GoogleAuthProvider();\r\nexport const Github= new firebase.auth.GithubAuthProvider();\r\n\r\n/*\r\nclass FirebaseObject{\r\n    constructor(){\r\n        app.initializeApp(firebaseConfig);\r\n        this.db=app.firestore;\r\n    }\r\n}\r\nexport default FirebaseObject;*/","import { ESTADO_SESION, MENSAJE_ALERTA, CERRAR_ALERTA, CREAR_USUARIO, INICIAR_SESION, EDITAR_USUARIO, CREAR_PROBLEMA, CERRAR_SESION} from \"../actions/actions\";\r\nimport { Autenticado, db } from \"../../FirebaseConfig\";\r\nconst EstadoSesion = estado => (\r\n    {\r\n        type: ESTADO_SESION,\r\n        data: estado.data,\r\n        usuario: estado.usuario,\r\n        sesion: estado.sesion\r\n    }\r\n)\r\nconst EstadoAlerta = mensaje => (\r\n    {\r\n        type: MENSAJE_ALERTA,\r\n        open: mensaje.open,\r\n        contenido: mensaje.contenido,\r\n        tipo: mensaje.tipo\r\n    }\r\n)\r\nconst cerrarAlerta = () => (\r\n    {\r\n        type: CERRAR_ALERTA,\r\n    }\r\n)\r\nconst IniciarSesion = (usuario) => dispatch => {\r\n    Autenticado.signInWithEmailAndPassword(usuario.correo, usuario.contraseña)\r\n        .then(resultado => {\r\n            if (resultado.user.emailVerified === true) {\r\n                db.collection(\"Usuarios\").doc(resultado.user.uid).get()\r\n                    .then(datos => {\r\n                        return dispatch({\r\n                            type: INICIAR_SESION,\r\n                            usuario: {\r\n                                id: resultado.user.uid,\r\n                                nombre: datos.data().nombre,\r\n                                apellido: datos.data().apellido,\r\n                                pais: datos.data().pais,\r\n                                bandera: datos.data().bandera,\r\n                                correo: datos.data().correo\r\n                            },\r\n                            sesion: true,\r\n                            alerta: {\r\n                                open: true,\r\n                                contenido: \"Ha iniciado sesion correctamente bienvenido\",\r\n                                tipo: \"success\"\r\n                            }\r\n                        })\r\n                    })\r\n            } else {\r\n                Autenticado.signOut()\r\n                return dispatch({\r\n                    type: INICIAR_SESION,\r\n                    sesion: false,\r\n                    alerta: {\r\n                        open: true,\r\n                        contenido: \"No ha verificado su cuenta de correo electronico\",\r\n                        tipo: \"error\"\r\n                    }\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            if (error.code === \"auth/wrong-password\") {\r\n                return dispatch({\r\n                    type: INICIAR_SESION,\r\n                    alerta: {\r\n                        open: true,\r\n                        contenido: \"La contraseña no concide con la direccion de correo electronico\",\r\n                        tipo: \"error\"\r\n                    }\r\n                })\r\n            }\r\n            if (error.code === \"auth/user-not-found\") {\r\n                return dispatch({\r\n                    type: INICIAR_SESION,\r\n                    alerta: {\r\n                        open: true,\r\n                        contenido: \"No hay ningún registro de usuario que corresponda a este identificador.\",\r\n                        tipo: \"error\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n}\r\nconst CrearUsuario = (datos) => dispatch => {\r\n    Autenticado.createUserWithEmailAndPassword(datos.correo, datos.contraseña)\r\n        .then(resultado => {\r\n            const configuration = {\r\n                url: \"https://reactfirebase-e716a.web.app\"\r\n            }\r\n            resultado.user.sendEmailVerification(configuration);\r\n            db.collection(\"Usuarios\").doc(resultado.user.uid).set(Object.assign({}, datos))\r\n                .then(resultado => {\r\n                    return dispatch({\r\n                        type: CREAR_USUARIO,\r\n                        alerta: {\r\n                            open: true,\r\n                            contenido: \"Estas a un paso de crear tu cuenta, verifica tu correo electronico\",\r\n                            tipo: \"success\"\r\n                        }\r\n                    })\r\n                })\r\n\r\n        }).catch(error => {\r\n            if (error.code === \"auth/email-already-in-use\") {\r\n                return dispatch({\r\n                    type: CREAR_USUARIO,\r\n                    alerta: {\r\n                        open: true,\r\n                        contenido: \"La dirección de correo electrónico ya está siendo utilizada por otra cuenta\",\r\n                        tipo: \"error\"\r\n                    }\r\n                })\r\n            }\r\n            if (error.code === \"auth/weak-password\") {\r\n                return dispatch({\r\n                    type: CREAR_USUARIO,\r\n                    alerta: {\r\n                        open: true,\r\n                        contenido: \"La contraseña debe tener al menos 6 caracteres\",\r\n                        tipo: \"error\"\r\n                    }\r\n\r\n                })\r\n            }\r\n        })\r\n}\r\nconst EditarUsuario = (usuario) => dispatch => {\r\n    db.collection(\"Usuarios\").doc(usuario.id).set(Object.assign({}, usuario))\r\n        .then(respuesta => {\r\n            return dispatch({\r\n                type: EDITAR_USUARIO,\r\n                alerta: {\r\n                    open: true,\r\n                    contenido: \"Informacion de perfil actualizada correctamente\",\r\n                    tipo: \"success\"\r\n                },\r\n                usuario: {\r\n                    id: usuario.id,\r\n                    nombre: usuario.nombre,\r\n                    apellido: usuario.apellido,\r\n                    correo: usuario.correo,\r\n                    pais: usuario.pais,\r\n                    bandera: usuario.bandera\r\n                }\r\n            })\r\n        })\r\n}\r\nconst CrearProblemaF = (datosProblema) => dispatch => {\r\n    db.collection(\"Problemas\").doc().set(Object.assign({}, datosProblema))\r\n        .then(resultas => {\r\n            return dispatch({\r\n                type: CREAR_PROBLEMA,\r\n                alerta: {\r\n                    open: true,\r\n                    contenido: \"Problema creado correctamente\",\r\n                    tipo: \"success\"\r\n                }\r\n            })\r\n        })\r\n}\r\nconst TraerProblemas = () => dispatch => {\r\n    \r\n}\r\nconst CerrarSesion = () => dispatch => {\r\n    Autenticado.signOut();\r\n    return dispatch({\r\n        type: CERRAR_SESION,\r\n        usuario: {\r\n            id: \"\",\r\n            nombre: \"\",\r\n            pais: \"\",\r\n            bandera: \"\",\r\n            correo: \"\"\r\n        },\r\n        alerta: {\r\n            open: true,\r\n            contenido: \"Has cerrado sesion correctamente\",\r\n            tipo: \"success\"\r\n        }\r\n    })\r\n}\r\nexport { EstadoSesion, EstadoAlerta, cerrarAlerta, CrearUsuario, IniciarSesion, EditarUsuario, TraerProblemas, CrearProblemaF, CerrarSesion }","export const ESTADO_SESION=\"ESTADO_SESION\";\r\nexport const MENSAJE_ALERTA=\"MENSAJE_ALERTA\";\r\nexport const CERRAR_ALERTA=\"CERRAR_ALERTA\";\r\nexport const CREAR_USUARIO=\"CREAR_USUARIO\";\r\nexport const INICIAR_SESION=\"INICIAR_SESION\";\r\nexport const CREAR_PROBLEMA=\"CREAR_PROBLEMA\";\r\nexport const EDITAR_USUARIO=\"EDITAR_USUARIO\";\r\nexport const TRAER_PROBLEMA=\"TRAER_PROBLEMA\";\r\nexport const CERRAR_SESION=\"CERRAR_SESION\";","import React, { Fragment } from \"react\";\r\nimport {Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { connect } from \"react-redux\";\r\nimport { cerrarAlerta } from \"../../Redux/reducer/creador de acciones\";\r\nconst Alerta = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Snackbar open={props.alerta.open}  autoHideDuration={6000} anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }} onClose={props.handleClose}>\r\n                <Alert id={props.alerta.tipo} onClose={props.handleClose} severity={props.alerta.tipo}>\r\n                    {props.alerta.contenido}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    alerta: {\r\n        open: state.alerta.open,\r\n        contenido: state.alerta.contenido,\r\n        tipo: state.alerta.tipo\r\n    }\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleClose() {\r\n        dispatch(cerrarAlerta())\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alerta);","import { Container, Grid, Slide } from \"@material-ui/core\";\r\nimport React, {Fragment} from \"react\";\r\nimport Banner from \"../../Medios/Videos/Banner.mp4\";\r\nimport img1 from \"../../Medios/Imagenes/1.svg\";\r\nimport img2 from \"../../Medios/Imagenes/2.svg\";\r\nimport img3 from \"../../Medios/Imagenes/3.svg\";\r\n\r\nconst Inicio = () => {\r\n    return (\r\n            <Fragment>\r\n                <video className=\"mq\" src={Banner} width=\"100%\" muted autoPlay loop />\r\n                <Container maxWidth=\"xl\" >\r\n                    <Grid container spacing={3}>\r\n                        <Slide direction=\"down\" in={true} timeout={1000}  >\r\n                            <Grid item xs={12} md>\r\n                                <img src={img3} width=\"100%\" alt=\"Casa\" />\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Slide direction=\"down\" in={true} timeout={2000}  >\r\n                            <Grid item xs={12} md>\r\n                                <img src={img1} width=\"100%\" alt=\"Casa\" />\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Slide direction=\"down\" in={true} timeout={3000}   >\r\n                            <Grid item xs={12} md>\r\n                                <img src={img2} width=\"100%\" alt=\"Casa\" />\r\n                            </Grid>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Container>\r\n            </Fragment >\r\n    )\r\n}\r\nexport default Inicio;","import React from \"react\";\r\nimport Google from \"../../Medios/Imagenes/Google.svg\";\r\nconst IconoGoogle=()=>{\r\n    return(\r\n        <img src={Google} height=\"20px\" alt=\"IconoGoogle\"></img>\r\n    )\r\n}\r\nexport default IconoGoogle;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Container, Grid, Paper, Slide, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autenticado, Facebook, Github, Google } from \"../../FirebaseConfig\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { EstadoAlerta, EstadoSesion, IniciarSesion } from \"../../Redux/reducer/creador de acciones\";\r\nimport { connect } from \"react-redux\";\r\nimport IconoGoogle from \"../Moleculas/IconoGoogle\";\r\n\r\nconst Login = (props) => {\r\n    const [state, setState] = useState({\r\n        email: \"jairprada9@gmail.com\",\r\n        password: \"123456\"\r\n    })\r\n    useEffect(() => {\r\n        if (props.sesion) {\r\n            props.history.push(\"/perfil\")\r\n        }\r\n    });\r\n    const iniciarSesionP = () => {\r\n        const usuario = {\r\n            correo: state.email,\r\n            contraseña: state.password\r\n        }\r\n        props.iniciarSesion(usuario);\r\n    }\r\n    const cambiar = (e) => {\r\n        if (e.target.name === \"email\") {\r\n\r\n            setState({\r\n                ...state,\r\n                email: e.target.value\r\n            })\r\n        } else if (e.target.name === \"password\") {\r\n            setState({\r\n                ...state,\r\n                password: e.target.value\r\n            })\r\n        }\r\n    }\r\n    const iniciarSesionF = async (e) => {\r\n        console.log(\"Ingrese\")\r\n        try {\r\n            const resultado = await Autenticado.signInWithPopup(Facebook);\r\n            if (resultado) {\r\n                props.estadoSesion(resultado.user)\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ha iniciado sesion correctamente bienvenido\",\r\n                    tipo: \"success\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n                props.history.push(\"/logeado\")\r\n            }\r\n            await console.log(resultado)\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n            if (error.code === \"auth/account-exists-with-different-credential\") {\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ya existe una cuenta con la misma dirección de correo electrónico de un proveedor asociado con esta dirección de correo electrónico.\",\r\n                    tipo: \"error\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n            }\r\n        }\r\n\r\n    }\r\n    const iniciarSesionG = async (e) => {\r\n        try {\r\n            console.log(\"Ingrese\")\r\n            const resultado = await Autenticado.signInWithPopup(Google);\r\n            if (resultado) {\r\n                props.estadoSesion(resultado.user)\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ha iniciado sesion correctamente bienvenido\",\r\n                    tipo: \"success\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n                props.history.push(\"/logeado\")\r\n            }\r\n            await console.log(resultado)\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n            if (error.code === \"auth/account-exists-with-different-credential\") {\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ya existe una cuenta con la misma dirección de correo electrónico de un proveedor asociado con esta dirección de correo electrónico.\",\r\n                    tipo: \"error\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n            }\r\n        }\r\n\r\n    }\r\n    const iniciarSesionGit = async (e) => {\r\n        try {\r\n            console.log(\"Ingrese\")\r\n            const resultado = await Autenticado.signInWithPopup(Github);\r\n            if (resultado) {\r\n                props.estadoSesion(resultado.user)\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ha iniciado sesion correctamente bienvenido\",\r\n                    tipo: \"success\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n                props.history.push(\"/logeado\")\r\n            }\r\n            await console.log(resultado)\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n            if (error.code === \"auth/account-exists-with-different-credential\") {\r\n                const mensaje = {\r\n                    open: true,\r\n                    contenido: \"Ya existe una cuenta con la misma dirección de correo electrónico de un proveedor asociado con esta dirección de correo electrónico.\",\r\n                    tipo: \"error\"\r\n                }\r\n                props.estadoAlerta(mensaje)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Container maxWidth=\"sm\" className=\"m\">\r\n                <Paper elevation={3} style={{ padding: \"30px 50px\", background: \"#F5F5F5\" }}>\r\n                    <Slide direction=\"down\" in={true} timeout={1000} mountOnEnter unmountOnExit >\r\n                        <div>\r\n                            <Typography className=\"text-center\" variant=\"h3\" gutterBottom>Inicio de Sesion</Typography>\r\n                            <Typography className=\"text-center\" varian=\"h1\"> <AccountCircleIcon style={{ fontSize: 80, color: \"#648DAE\" }} id=\"menuC\" color=\"secondary\" className=\"icono\" /></Typography>\r\n                            <TextField fullWidth required onChange={cambiar} name=\"email\" type=\"email\" helperText=\"Ingresa tu correo\" variant=\"outlined\" label=\"Email\"></TextField>\r\n                            <TextField fullWidth required onChange={cambiar} name=\"password\" type=\"password\" helperText=\"Ingresa tu contraseña\" variant=\"outlined\" label=\"Password\"></TextField>\r\n                        </div>\r\n                    </Slide>\r\n                    <Slide direction=\"right\" in={true} timeout={2000} mountOnEnter unmountOnExit >\r\n                        <Button endIcon={<ArrowForwardIcon />} onClick={iniciarSesionP} variant=\"contained\" fullWidth color=\"primary\">Iniciar Sesion</Button>\r\n                    </Slide>\r\n                    <div className=\"mt-3\">\r\n                        <Grid container spacing={1} >\r\n                            <Slide direction=\"right\" in={true} timeout={1000} mountOnEnter unmountOnExit >\r\n                                <Grid item xs>\r\n                                    <Button startIcon={<FacebookIcon style={{ color: \"blue\" }} />} fullWidth onClick={iniciarSesionF} variant=\"contained\" >Facebook</Button>\r\n                                </Grid>\r\n                            </Slide>\r\n                            <Slide direction=\"up\" in={true} timeout={1000} mountOnEnter unmountOnExit >\r\n                                <Grid item xs>\r\n                                    <Button startIcon={<GitHubIcon />} onClick={iniciarSesionGit} fullWidth variant=\"contained\">Github</Button>\r\n                                </Grid>\r\n                            </Slide>\r\n                            <Slide direction=\"left\" in={true} timeout={1000} mountOnEnter unmountOnExit >\r\n                                <Grid item xs>\r\n                                    <Button startIcon={<IconoGoogle />} fullWidth onClick={iniciarSesionG} variant=\"contained\">Google</Button>\r\n                                </Grid>\r\n                            </Slide>\r\n                        </Grid>\r\n                    </div>\r\n                </Paper>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sesion: state.sesion\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    estadoSesion(respuesta) {\r\n        dispatch(EstadoSesion(respuesta))\r\n    },\r\n    estadoAlerta(mensaje) {\r\n        dispatch(EstadoAlerta(mensaje))\r\n    },\r\n    iniciarSesion(usuario) {\r\n        dispatch(IniciarSesion(usuario))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login) ","export class Usuario {\r\n    constructor(nombre, apellido, pais, bandera, correo,contraseña) {\r\n        this.nombre = nombre;\r\n        this.apellido = apellido;\r\n        this.pais = pais;\r\n        this.bandera = bandera;\r\n        this.correo = correo;\r\n        this.contraseña=contraseña\r\n    }\r\n}\r\n\r\nexport class Alerta {\r\n    constructor(open, contenido, tipo) {\r\n        this.open = open;\r\n        this.contenido = contenido;\r\n        this.tipo = tipo;\r\n    }\r\n}\r\n\r\n","import { Button, Container, Grid, Paper, Slide, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from \"react-redux\";\r\nimport { EstadoAlerta, CrearUsuario } from \"../../Redux/reducer/creador de acciones\";\r\nimport { Usuario} from \"../../clases/clases\";\r\nconst Registro = (props) => {\r\n    const [state, setState] = useState({\r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        correo: \"\",\r\n        contraseña: \"\",\r\n        pais: \"\",\r\n        bandera: \"\"\r\n    })\r\n    const [seleccion, setSeleccion] = useState({\r\n        paises: []\r\n    })\r\n    useEffect(() => {\r\n        fetch(\"https://restcountries.eu/rest/v2/all\")\r\n            .then(function (res) {\r\n                return res.json()\r\n            }).then(function (data) {\r\n                setSeleccion({ paises: data })\r\n            })\r\n    }, []);\r\n    const validarDatos=()=>{\r\n    }\r\n    const nuevoUsuario = (e) => {\r\n        validarDatos()\r\n        const UsuarioNuevo = new Usuario(state.nombre, state.apellido, state.pais, state.bandera, state.correo,state.contraseña);\r\n        props.nuevoUsuarioP(UsuarioNuevo)\r\n    }\r\n    const cambiar = (e) => {\r\n        let flag = \"\"\r\n        if (e.target.name === \"pais\") {\r\n            seleccion.paises.forEach(pais => {\r\n                if (pais.name === e.target.value) {\r\n                    flag = pais.flag\r\n                }\r\n            });\r\n            setState({\r\n                ...state,\r\n                pais: e.target.value,\r\n                bandera: flag\r\n            })\r\n        }\r\n        if (e.target.name === \"nombre\") {\r\n\r\n            setState({\r\n                ...state,\r\n                nombre: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"apellido\") {\r\n            setState({\r\n                ...state,\r\n                apellido: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"correo\") {\r\n            setState({\r\n                ...state,\r\n                correo: e.target.value\r\n            })\r\n        } if (e.target.name === \"contraseña\") {\r\n            setState({\r\n                ...state,\r\n                contraseña: e.target.value\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Container maxWidth=\"sm\" className=\"m\">\r\n                <Paper elevation={3} style={{ padding: \"40px 50px\", background: \"#F5F5F5\" }}>\r\n                    <div>\r\n                        <Slide direction=\"left\" in={true} timeout={1000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className=\"text-center\" variant=\"h3\" gutterBottom>Registrate</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Slide direction=\"right\" in={true} timeout={1000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className=\"text-center\" varian=\"h1\"> <AccountCircleIcon style={{ fontSize: 80, color: \"#648DAE\" }} color=\"secondary\" id=\"menuC\" className=\"icono\" /></Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Grid container spacing={2}>\r\n                            <Slide direction=\"right\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Nombre\" name=\"nombre\" onChange={cambiar} helperText=\"Ingresa tu nombre\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                            <Slide direction=\"left\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Apellido\" name=\"apellido\" onChange={cambiar} helperText=\"Ingresa tu apellido\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Slide direction=\"left\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={9}>\r\n                                    <TextField select fullWidth label=\"Pais\" name=\"pais\" value={state.pais} onChange={cambiar} SelectProps={{\r\n                                        native: true\r\n                                    }} variant=\"outlined\">\r\n                                        <option key=\"error\" value=\"error\">seleccione un pais</option>\r\n                                        {\r\n                                            seleccion.paises.map((pais) => {\r\n                                                return (\r\n                                                    <option key={pais.name} value={pais.name}>{pais.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <img src={state.bandera} alt={state.name} height=\"50px\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Grid container spacing={3}>\r\n                            <Slide direction=\"right\" in={true} timeout={2100} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Correo\" typeof=\"email\" name=\"correo\" onChange={cambiar} type=\"email\" helperText=\"Ingresa tu correo\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                            <Slide direction=\"left\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Contraseña\" name=\"contraseña\" onChange={cambiar} type=\"password\" helperText=\"Ingresa tu nombre\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                        </Grid>\r\n                    </div>\r\n                    <Slide direction=\"right\" in={true} timeout={2000} mountOnEnter unmountOnExit >\r\n                        <Button variant=\"contained\" id=\"menu\" color=\"primary\" endIcon={<ArrowForwardIcon />} onClick={nuevoUsuario} fullWidth >Registrarse</Button>\r\n                    </Slide>\r\n                </Paper>\r\n            </Container>\r\n        </Fragment >\r\n    )\r\n}\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    estadoAlerta(mensaje) {\r\n        dispatch(EstadoAlerta(mensaje))\r\n    },\r\n    nuevoUsuarioP(usuario) {\r\n        dispatch(CrearUsuario(usuario))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registro);","import { AppBar, Avatar, Button, Grid, Hidden, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Outcome from \"../../Medios/Imagenes/Outcome.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { CerrarSesion } from \"../../Redux/reducer/creador de acciones\";\r\n\r\nconst Menu = (props) => {\r\n    const cerrar = () => {\r\n        if (window.confirm(\"¿ Esta seguro que desea cerrar su sesion actual ?\")) {\r\n            props.cerrarSesion();\r\n            props.history.push(\"/\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <AppBar color=\"primary\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h4\" >\r\n                        <NavLink id=\"text-white\" to=\"/\"><Button startIcon={<img src={Outcome} alt=\"icono\" height=\"50px\"></img>}><Typography variant=\"h5\" id=\"text-white\">OUTCOME</Typography></Button></NavLink>\r\n                    </Typography>\r\n                    <div style={{ flexGrow: \"1\" }}>\r\n                    </div>\r\n                    <Hidden smDown>\r\n                        {\r\n                            props.sesion\r\n                                ? <Fragment>\r\n                                    <NavLink id=\"text-white\" to=\"/crearProblema\"><Button id=\"text-white\" fullWidth>Crear Problema</Button></NavLink>\r\n                                    <NavLink id=\"text-white\" to=\"/listaProblemas\"><Button id=\"text-white\" fullWidth>Lista Problemas</Button></NavLink>\r\n                                    <NavLink id=\"text-white\" to=\"/perfil\"><Button id=\"text-white\" fullWidth>{`Jair`}</Button></NavLink>\r\n                                    <Button id=\"text-white\" onClick={cerrar} >SALIR</Button>\r\n                                    <Avatar alt=\"perfil\"></Avatar>\r\n                                </Fragment>\r\n                                : <Fragment>\r\n                                    <NavLink id=\"text-white\" to=\"/\"><Button id=\"text-white\" fullWidth>Inicio</Button></NavLink>\r\n                                    <NavLink id=\"text-white\" to=\"/registro\"><Button fullWidth id=\"text-white\">Registrarse</Button></NavLink>\r\n                                    <NavLink id=\"text-white\" to=\"/login\"><Button id=\"text-white\" fullWidth>IniciarSesion</Button></NavLink>\r\n                                </Fragment>\r\n                        }\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <Grid container >\r\n                            <Grid item xs={9}>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <NavLink id=\"text-white\" to=\"/Registro\"><Button endIcon={<MenuIcon />} fullWidth id=\"text-white\"></Button></NavLink>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        sesion: state.sesion,\r\n        usuario: state.usuario\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n    cerrarSesion() {\r\n        dispatch(CerrarSesion())\r\n    }\r\n})\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Menu));","import { Button, Container, Grid, Paper, Slide, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditarUsuario, EstadoAlerta } from \"../../../Redux/reducer/creador de acciones\";\r\nconst EditarPerfil = (props) => {\r\n    useEffect(() => {\r\n        if (props.sesion === false) {\r\n            const alerta={\r\n                open:true,\r\n                contenido:\"Tu sesion se ha terminado, vuelve a iniciar para acceder a las funcionalidades de Outcome\",\r\n                tipo:\"error\"\r\n            }\r\n            props.mostrarAlerta(alerta)\r\n            props.history.push(\"/\")\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        fetch(\"https://restcountries.eu/rest/v2/all\")\r\n            .then(function (res) {\r\n                return res.json()\r\n            }).then(function (data) {\r\n                setSeleccion({ paises: data })\r\n            })\r\n    }, []);\r\n    const [state, setState] = useState({\r\n        id: props.usuario.id,\r\n        nombre: props.usuario.nombre,\r\n        apellido: props.usuario.apellido,\r\n        correo: props.usuario.correo,\r\n        pais: props.usuario.pais,\r\n        bandera: props.usuario.bandera\r\n    })\r\n    const [seleccion, setSeleccion] = useState({\r\n        paises: []\r\n    })\r\n    const cambiar = (e) => {\r\n        let flag = \"\"\r\n        if (e.target.name === \"pais\") {\r\n            seleccion.paises.forEach(pais => {\r\n                if (pais.name === e.target.value) {\r\n                    flag = pais.flag\r\n                }\r\n            });\r\n            setState({\r\n                ...state,\r\n                pais: e.target.value,\r\n                bandera: flag\r\n            })\r\n        }\r\n        if (e.target.name === \"nombre\") {\r\n\r\n            setState({\r\n                ...state,\r\n                nombre: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"apellido\") {\r\n            setState({\r\n                ...state,\r\n                apellido: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"correo\") {\r\n            setState({\r\n                ...state,\r\n                correo: e.target.value\r\n            })\r\n        } if (e.target.name === \"contraseña\") {\r\n            setState({\r\n                ...state,\r\n                contraseña: e.target.value\r\n            })\r\n        }\r\n    }\r\n    const editarU = (e) => {\r\n        if (window.confirm(\"Esta seguro que desea cambiar la informacion de su perfil\")) {\r\n            props.editarUsuario(state)\r\n            props.history.push(\"/perfil\")\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Container maxWidth=\"sm\" className=\"m\">\r\n                <Paper elevation={3} style={{ padding: \"40px 50px\", background: \"#F5F5F5\" }}>\r\n                    <div>\r\n                        <Slide direction=\"left\" in={true} timeout={1000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className=\"text-center\" variant=\"h3\" gutterBottom>Editar Perfil</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Slide direction=\"right\" in={true} timeout={1000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className=\"text-center\" varian=\"h1\"> <AccountCircleIcon style={{ fontSize: 80, color: \"#648DAE\" }} color=\"secondary\" id=\"menuC\" className=\"icono\" /></Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Grid container spacing={2}>\r\n                            <Slide direction=\"right\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Nombre\" value={state.nombre} name=\"nombre\" onChange={cambiar} helperText=\"Ingresa tu nombre\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                            <Slide direction=\"left\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth label=\"Apellido\" value={state.apellido} name=\"apellido\" onChange={cambiar} helperText=\"Ingresa tu apellido\" variant=\"outlined\"></TextField>\r\n                                </Grid>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Slide direction=\"left\" in={true} timeout={2000} mountOnEnter unmountOnExit>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={9}>\r\n                                    <TextField select fullWidth label=\"Pais\" name=\"pais\" value={state.pais} onChange={cambiar} SelectProps={{\r\n                                        native: true\r\n                                    }} variant=\"outlined\">\r\n                                        <option key=\"error\" value=\"error\">seleccione un pais</option>\r\n                                        {\r\n                                            seleccion.paises.map((pais) => {\r\n                                                return (\r\n                                                    <option key={pais.name} value={pais.name}>{pais.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <img src={state.bandera} alt={state.name} height=\"50px\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <br></br>\r\n                    </div>\r\n                    <Slide direction=\"right\" in={true} timeout={2000} mountOnEnter unmountOnExit >\r\n                        <Button variant=\"contained\" onClick={editarU} id=\"menu\" color=\"primary\" endIcon={<ArrowForwardIcon />} fullWidth >Actualizar Informacion</Button>\r\n                    </Slide>\r\n                </Paper>\r\n            </Container>\r\n        </Fragment >\r\n    )\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        usuario: state.usuario,\r\n        sesion: state.sesion\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n    editarUsuario(usuario) {\r\n        dispatch(EditarUsuario(usuario))\r\n    },\r\n    mostrarAlerta(alerta){\r\n        dispatch(EstadoAlerta(alerta))\r\n    }\r\n})\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditarPerfil));","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Container, TextField, Typography, Button, Paper, Grid } from \"@material-ui/core\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ImageUploader from 'react-images-upload';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport { connect } from \"react-redux\";\r\nimport { CrearProblemaF, EstadoAlerta } from \"../../../Redux/reducer/creador de acciones\";\r\n\r\nconst CrearProblema = (props) => {\r\n    useEffect(() => {\r\n        if (props.sesion === false) {\r\n            const alerta = {\r\n                open: true,\r\n                contenido: \"Tu sesion se ha terminado, vuelve a iniciar para acceder a las funcionalidades de Outcome\",\r\n                tipo: \"error\"\r\n            }\r\n            props.mostrarAlerta(alerta)\r\n            props.history.push(\"/\")\r\n        }\r\n    });\r\n    const [state, setState] = useState({\r\n        titulo: \"\",\r\n        categoria: \"\",\r\n        descripcion: \"\",\r\n        dueño: props.usuario.id,\r\n        fotos: []\r\n    })\r\n    const cambiar = (e) => {\r\n\r\n        if (e.target.name === \"titulo\") {\r\n            setState({\r\n                ...state,\r\n                titulo: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"categoria\") {\r\n            setState({\r\n                ...state,\r\n                categoria: e.target.value\r\n            })\r\n        }\r\n        if (e.target.name === \"descripcion\") {\r\n            setState({\r\n                ...state,\r\n                descripcion: e.target.value\r\n            })\r\n        }\r\n    }\r\n    const fotos = (picture) => {\r\n        setState({\r\n            ...state,\r\n            fotos: picture\r\n        })\r\n    }\r\n    const subir = () => {\r\n            props.crearProblema(state)\r\n            props.history.push(\"/listaProblemas\")\r\n    }\r\n    const categorias = [\"Matematicas\", \"Lenguas\", \"Quimica\", \"Informatica\"]\r\n    return (\r\n        <Fragment>\r\n            <Container maxWidth=\"md\" className=\"m\">\r\n                <Paper elevation={3} style={{ padding: \"90px\", background: \"#F5F5F5\" }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h3\" align=\"center\">Crear problema</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" varian=\"h1\"> <AddToPhotosIcon style={{ fontSize: 80, color: \"#648DAE\" }} color=\"secondary\" id=\"menuC\" className=\"icono\" /></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField label=\"Titulo\" fullWidth variant=\"outlined\" onChange={cambiar} name=\"titulo\" helperText=\"Titulo problema\"></TextField>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField select fullWidth label=\"Categoria\" name=\"categoria\" value={state.pais} onChange={cambiar} SelectProps={{\r\n                                native: true\r\n                            }} variant=\"outlined\">\r\n                                <option key=\"error\" value=\"error\">seleccione una categoria</option>\r\n                                {\r\n                                    categorias.map((categoria) => {\r\n                                        return (\r\n                                            <option key={categoria} value={categoria}>{categoria}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12}>\r\n                            <TextField label=\"Descripcion\" name=\"descripcion\" multiline rows={4} onChange={cambiar} fullWidth variant=\"outlined\" helperText=\"Ingresa la descripcion del problema\"></TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <ImageUploader\r\n                                withIcon={true}\r\n                                buttonText='Seleccionar Imagenes'\r\n                                onChange={fotos}\r\n                                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                                maxFileSize={5242880}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {\r\n                                state.fotos.map((elemento) => {\r\n                                    return (\r\n                                        <img src={elemento.name} width=\"200px\" alt={elemento.name}></img>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <Button variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIcon />} onClick={subir} fullWidth>Crear problema</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        usuario: state.usuario,\r\n        sesion: state.sesion\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n    crearProblema(usuario) {\r\n        dispatch(CrearProblemaF(usuario))\r\n    },\r\n    mostrarAlerta(alerta) {\r\n        dispatch(EstadoAlerta(alerta))\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CrearProblema);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst Tarjeta = (props) => {\r\n    return (\r\n        <Card style={{height:\"370px\"}}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"200\"\r\n                    image=\"https://images.pexels.com/photos/5563180/pexels-photo-5563180.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    title={props.titulo}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.titulo}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.descripcion}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Solucionar\r\n                    </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Ver\r\n                    </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nexport default Tarjeta;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Container, Grid, Paper } from \"@material-ui/core\";\r\nimport { db } from \"../../../FirebaseConfig\";\r\nimport Tarjeta from \"../../Moleculas/Tarjeta\";\r\nimport { connect } from \"react-redux\";\r\nimport { EstadoAlerta, TraerProblemas } from \"../../../Redux/reducer/creador de acciones\";\r\n\r\nconst ListaProblemas = (props) => {\r\n\r\n    const [state, setState] = useState([])\r\n    const getData = async () => {\r\n        const documentos = []\r\n        db.collection(\"Problemas\").onSnapshot((arreglo) => {\r\n            arreglo.forEach((elemento) => {\r\n                documentos.push({ ...elemento.data(), id: elemento.id });\r\n            });\r\n            setState(documentos)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container maxWidth=\"lg\" style={{ marginTop: \"100px\" }}>\r\n                <Paper elevation={3} style={{ padding: \"40px\" }} >\r\n\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            state.map(e => {\r\n                                return (\r\n                                    <Grid item xs={4}>\r\n                                        <Tarjeta titulo={e.titulo} descripcion={e.descripcion} id={e.id}/>\r\n                                    </Grid>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        usuario: state.usuario,\r\n        sesion: state.sesion\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n    obtenerProblemas() {\r\n        dispatch(TraerProblemas())\r\n    },\r\n    mostrarAlerta(alerta) {\r\n        dispatch(EstadoAlerta(alerta))\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListaProblemas);","import { Avatar, Button, Container, Grid, Paper, Slide, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PerfilBanner from \"../../../Medios/Videos/Perfil.mp4\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { EstadoAlerta } from \"../../../Redux/reducer/creador de acciones\";\r\n\r\nconst Perfil = (props) => {\r\n    useEffect(() => {\r\n        if (props.sesion === false) {\r\n            const alerta = {\r\n                open: true,\r\n                contenido: \"Tu sesion se ha terminado, vuelve a iniciar para acceder a las funcionalidades de Outcome\",\r\n                tipo: \"error\"\r\n            }\r\n            props.mostrarAlerta(alerta)\r\n        }\r\n    });\r\n    const editar = () => {\r\n        props.history.push(\"/auth/editarPerfil\")\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <video video src={PerfilBanner} className=\"mq\" loop width=\"100%\" muted autoPlay ></video >\r\n            <Container maxWidth=\"md\">\r\n                <Slide direction=\"down\" in={true} timeout={3000} mountOnEnter unmountOnExit>\r\n                    <Paper elevation={3} id=\"Perfil\" style={{ padding: \"100px 0px\", margin: \"40px\" }}>\r\n                        <Grid container justify=\"center\" >\r\n\r\n                            <Grid item xs={9}  >\r\n\r\n                                <Typography variant=\"h4\" align=\"center\">{`${props.usuario.nombre} `}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\" className=\"mt-3\">\r\n                            <Grid item >\r\n                                <Avatar alt=\"imagen\" style={{ width: \"100px\", height: \"100px\", background: \"purple\" }} >O</Avatar>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\" className=\"mt-3\">\r\n                            <Grid item >\r\n                                <EmailIcon></EmailIcon>\r\n                            </Grid>\r\n                            <Grid item >\r\n                                <Typography>{props.usuario.correo}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br></br>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item xs={1}  >\r\n                                <img src={props.usuario.bandera} width=\"100%\" alt=\"colombia\"></img>\r\n                            </Grid>\r\n                            <Grid item style={{ padding: \"25px\", }}>\r\n                                <Typography variant=\"body2\">{props.usuario.pais}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\" className=\"mt-3\">\r\n                            <Grid item xs={5} >\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={editar} fullWidth endIcon={<EditOutlinedIcon />}>Editar Perfil</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Slide>\r\n            </Container>\r\n\r\n        </Fragment >\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        usuario: state.usuario,\r\n        sesion: state.sesion\r\n    }\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n    mostrarAlerta(alerta){\r\n        dispatch(EstadoAlerta(alerta))\r\n    }\r\n})\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Perfil))\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Inicio from '../Componentes/Vistas/Inicio';\r\nimport Login from '../Componentes/Vistas/Login';\r\nimport Registro from '../Componentes/Vistas/Registro';\r\nimport Menu from '../Componentes/Moleculas/Menu';\r\nimport EditarPerfil from \"../Componentes/Vistas/Usuarios Logeados/EditarPerfil\";\r\nimport CrearProblema from \"../Componentes/Vistas/Usuarios Logeados/CrearProblema\";\r\nimport { connect } from \"react-redux\";\r\nimport ListaProblemas from \"../Componentes/Vistas/Usuarios Logeados/ListaProblemas\";\r\nimport Perfil from \"../Componentes/Vistas/Usuarios Logeados/Perfil\";\r\n\r\nconst Rutas = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Router>\r\n                <Menu />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Inicio} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/registro\" exact component={Registro} />\r\n                    <Route path=\"/perfil\" exact component={Perfil} />\r\n                    <Route path=\"/auth/editarPerfil\" exact component={EditarPerfil} />\r\n                    <Route path=\"/crearProblema\" exact component={CrearProblema} />\r\n                    <Route path=\"/listaProblemas\" exact component={ListaProblemas} />\r\n                </Switch>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        usuario: state\r\n    }\r\n)\r\nconst mapDispatchToProps = (state) => ({})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rutas);\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { CERRAR_ALERTA, CREAR_USUARIO, ESTADO_SESION, MENSAJE_ALERTA, INICIAR_SESION, EDITAR_USUARIO, CREAR_PROBLEMA, CERRAR_SESION } from \"../actions/actions\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\";\r\nconst initialStore = {\r\n    usuario: {\r\n        id: \"\",\r\n        nombre: \"\",\r\n        pais: \"\",\r\n        bandera: \"\",\r\n        correo: \"\"\r\n    },\r\n    problema: [],\r\n    sesion: false,\r\n    alerta: {\r\n        open: false,\r\n        contenido: \"\",\r\n        tipo: \"\"\r\n    }\r\n}\r\nconst ReducerRaiz = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case ESTADO_SESION:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                usuario: action.usuario,\r\n                sesion: action.sesion\r\n            }\r\n        case MENSAJE_ALERTA:\r\n            return {\r\n                ...state,\r\n                alerta: {\r\n                    open: action.open,\r\n                    contenido: action.contenido,\r\n                    tipo: action.tipo\r\n                }\r\n            }\r\n        case CERRAR_ALERTA:\r\n            return {\r\n                ...state,\r\n                alerta: {\r\n                    open: false,\r\n                    contenido: \"\",\r\n                    tipo: \"\"\r\n                }\r\n            }\r\n        case CREAR_USUARIO:\r\n            return {\r\n                ...state,\r\n                alerta: action.alerta\r\n            }\r\n        case EDITAR_USUARIO:\r\n            return {\r\n                ...state,\r\n                alerta: action.alerta,\r\n                usuario: action.usuario\r\n            }\r\n        case INICIAR_SESION:\r\n            return {\r\n                ...state,\r\n                usuario: action.usuario,\r\n                alerta: action.alerta,\r\n                sesion: action.sesion\r\n            }\r\n        case CREAR_PROBLEMA:\r\n            return {\r\n                ...state,\r\n                alerta: action.alerta,\r\n            }\r\n        case CERRAR_SESION:\r\n            return {\r\n                ...state,\r\n                usuario: action.usuario,\r\n                alerta: action.alerta,\r\n                sesion: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createStore(ReducerRaiz, composeWithDevTools(applyMiddleware(thunk)))","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\n\r\nconst theme =createMuiTheme({\r\n    palette:{\r\n        primary:{\r\n            light:\"#9427bc\",\r\n            main:\"#67008a\",\r\n            dark:\"#470060\",\r\n            contrastText:\"#f9f9f9\"\r\n        },\r\n        secondary:{\r\n            light:\"#6b6868\",\r\n            main:\"#424040\",\r\n            dark:\"#1c1c1c\"\r\n        }\r\n    }\r\n})\r\nexport default theme;","import React, { Fragment } from 'react';\r\nimport {  Provider } from 'react-redux';\r\nimport './App.css';\r\nimport Alerta from './Componentes/Moleculas/Alerta';\r\nimport Rutas from './rutas/Rutas';\r\nimport Store from \"./Redux/store/Store\";\r\nimport \"./Outcome.svg\"\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from \"./temaConfig\";\r\n\r\nfunction App(props) {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Fragment>\r\n        <Provider store={Store}>\r\n          <Rutas />\r\n          <Alerta />\r\n        </Provider>\r\n      </Fragment>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Banner.51538cf6.mp4\";","module.exports = __webpack_public_path__ + \"static/media/1.03efc52a.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.227481d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.89661de3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Google.c7259fe4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Outcome.057b522a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Perfil.bcb09535.mp4\";"],"sourceRoot":""}